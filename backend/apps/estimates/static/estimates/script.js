/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º (1, 2 –∏–ª–∏ 3).
 * –°–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ.
 */
function goToScreen(screenNumber) {
  const screens = document.querySelectorAll(".screen");
  screens.forEach(screen => {
    screen.classList.remove("active");
  });
  const target = document.getElementById(`screen-${screenNumber}`);
  if (target) {
    target.classList.add("active");
  }
}

function toggleStageDetails(id) {
  const details = document.getElementById(`details-${id}`);
  const arrow = document.getElementById(`arrow-${id}`);
  if (!details || !arrow) return;
  
  if (details.style.display === "none" || details.style.display === "") {
    details.style.display = "block";
    arrow.textContent = "‚ñ≤";
  } else {
    details.style.display = "none";
    arrow.textContent = "‚ñº";
  }
}

function openAddStageModal() {
  document.getElementById('addStageModal').style.display = 'block';
}

function closeAddStageModal() {
  document.getElementById('addStageModal').style.display = 'none';
}

function addStage(event) {
  event.preventDefault();
  const sname = document.getElementById('stage-name').value;
  const sduration = document.getElementById('stage-duration').value;
  const scost = document.getElementById('stage-cost').value;
  alert(`–≠—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω: ${sname} (–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${sduration} –¥–Ω, –°—Ç–æ–∏–º–æ—Å—Ç—å: ${scost} ‚Ç∏)`);
  closeAddStageModal();
  return false;
}

// –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
function openMaterialForm(stageIndex) {
  // stageIndex –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ forloop.counter0, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–±–∞–≤–ª—è–µ–º 1
  document.getElementById('material-stage-index').value = parseInt(stageIndex, 10);
  document.getElementById('materialModal').style.display = 'block';
}

// –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
function closeMaterialForm() {
  document.getElementById('materialModal').style.display = 'none';
}

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç
function openWorkForm(stageIndex) {
  document.getElementById('work-stage-index').value = parseInt(stageIndex, 10);
  document.getElementById('workModal').style.display = 'block';
}

function closeWorkForm() {
  document.getElementById('workModal').style.display = 'none';
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä)
function addMaterial(event) {
  event.preventDefault();
  const stageIndex0 = document.getElementById('material-stage-index').value;
  // –ü–µ—Ä–µ–≤–æ–¥–∏–º forloop.counter0 –≤ forloop.counter, –ø—Ä–∏–±–∞–≤–ª—è—è 1
  const stageIndex = parseInt(stageIndex0, 10) + 1;
  const name = document.getElementById('material-name').value;
  const qty = parseFloat(document.getElementById('material-quantity').value);
  const unit = document.getElementById('material-unit').value;
  const price = parseFloat(document.getElementById('material-price').value);
  const total = qty * price;

  // –ü–æ–∏—Å–∫ —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —ç—Ç–∞–ø–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
  const tableBody = document.querySelector(`#details-${stageIndex} .materials-table tbody`);

  if (tableBody) {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${name}</td>
        <td>${qty.toFixed(2)}</td>
        <td>${unit}</td>
        <td>${price.toFixed(2)} ‚Ç∏</td>
        <td><strong>${total.toFixed(2)} ‚Ç∏</strong></td>
      `;
      tableBody.appendChild(tr);
      alert(`–î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ç–µ—Ä–∏–∞–ª: ${name}, —Å—É–º–º–∞ = ${total.toFixed(2)} ‚Ç∏`);
  } else {
      alert('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —ç—Ç–∞–ø–∞ index=' + stageIndex);
  }
  closeMaterialForm();
  return false;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã (–ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä)
function addWork(event) {
  event.preventDefault();
  const stageIndex0 = document.getElementById('work-stage-index').value;
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º to integer –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º 1, —Ç–∞–∫ –∫–∞–∫ id –¥–µ—Ç–∞–ª–µ–π —ç—Ç–∞–ø–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ details-{{ forloop.counter }}
  const stageIndex = parseInt(stageIndex0, 10) + 1;
  const wname = document.getElementById('work-name').value;
  const whours = parseFloat(document.getElementById('work-hours').value);
  const wcost = parseFloat(document.getElementById('work-cost').value);
  const wtotal = whours * wcost;
  
  // –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–∞–±–æ—Ç –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É
  const tableBody = document.querySelector(`#details-${stageIndex} .works-table tbody`);
  
  if (tableBody) {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${wname}</td>
      <td>${whours.toFixed(2)}</td>
      <td>${wcost.toFixed(2)} ‚Ç∏</td>
      <td><strong>${wtotal.toFixed(2)} ‚Ç∏</strong></td>
    `;
    tableBody.appendChild(tr);
    alert(`–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞: ${wname}, —Å—É–º–º–∞ = ${wtotal.toFixed(2)} ‚Ç∏`);
  } else {
    alert('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–±–æ—Ç –¥–ª—è —ç—Ç–∞–ø–∞ index=' + stageIndex);
  }
  
  closeWorkForm();
  return false;
}

document.addEventListener("DOMContentLoaded",()=>{
  const emojiMap=[/* ‚Ä¶ */];
  document.querySelectorAll(".stage-emoji").forEach(span=>{
    const t=span.dataset.stage||"";
    const f=emojiMap.find(([re])=>re.test(t));
    span.textContent=f?f[1]:"üì¶";
  });
});

function recalculateAll() {
  let totalEstimate = 0;

  document.querySelectorAll(".estimate-stage").forEach(stage => {
    let stageTotal = 0;

    // –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    const materialRows = stage.querySelectorAll(".materials-table tbody tr");
    materialRows.forEach(row => {
      const quantity = parseFloat(row.querySelector(".material-quantity")?.value || 0);
      const price = parseFloat(row.querySelector(".material-price")?.value || 0);
      const total = quantity * price;

      const totalCell = row.querySelector(".material-total");
      if (totalCell) totalCell.textContent = `${total.toFixed(2)} ‚Ç∏`;

      stageTotal += total;
    });

    // –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö —Ä–∞–±–æ—Ç
    const workRows = stage.querySelectorAll(".works-table tbody tr");
    workRows.forEach(row => {
      const hours = parseFloat(row.querySelector(".work-hours")?.value || 0);
      const cost = parseFloat(row.querySelector(".work-cost")?.value || 0);
      const total = hours * cost;

      const totalCell = row.querySelector(".work-total");
      if (totalCell) totalCell.textContent = `${total.toFixed(2)} ‚Ç∏`;

      stageTotal += total;
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —ç—Ç–∞–ø–∞
    const stageCostField = stage.querySelector(".stage-cost input");
    if (stageCostField) stageCostField.value = stageTotal.toFixed(2);

    totalEstimate += stageTotal;
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—É–º–º—ã —Å–º–µ—Ç—ã
  const totalEstimateInput = document.getElementById("total-cost");
  if (totalEstimateInput) {
    totalEstimateInput.value = totalEstimate.toFixed(2);
  }
}